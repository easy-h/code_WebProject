<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	
	<!-- 커넥션풀 등록 (데이터베이스와 연결하는 방식) hikari는 미리 연결을 맺고 반환하는 구조로 성능이 좋음 -->
	<!-- log4jdbc를 이용하는경우 JDBC 드라이버와 URL 을 수정해야함 -->
		<!-- <property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"></property>
		<property name="jdbcUrl" value="jdbc:oracle:thin:@localhost:1521:xe"></property> -->
	<bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
		<property name="driverClassName" value="net.sf.log4jdbc.sql.jdbcapi.DriverSpy"></property>
		<property name="username" value="book_ex"></property>
		<property name="password" value="book_ex"></property>
	</bean>
	
	<!-- hikariCP configuration 등록한 커넥션풀을 연결하는 bean 등록-->
	<bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
			<constructor-arg ref="hikariConfig"></constructor-arg>
	</bean>
	
	<!-- mybatis의 핵심 객체 sqlSession과 SqlSessionFactory factory는 내부적으로 sqlSession을 생성함 -->
	<!-- 개발에선 sqlSession을 통해 Connection을 생성하거나 원하는 sql을 전달하고 결과를 리턴받는 구조로 작성한다. -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	<!-- mybatis 설정의 지정된 패키지의 모든 어노테이션을 찾아 설정하는 것을 의미한다. -->
	<mybatis-spring:scan base-package="org.zerock.mapper"/>
	
	<!-- 스프링 프레임워크가 관리하는 객체 즉 bean을 설정하는 설정파일 역할을 한다. -->
	<context:component-scan base-package="org.zerock.sample"></context:component-scan>
	
</beans>
